@*
    Names: Ricky To, Grady Spurril, Logan Hoppen
    Date: November 14th 2023
    Description:    This page is for searching and updating reservations in Traveless.
                    It enables the user to input search criteria (code, airline, name)
                    to locate matching reservations created by Flights.Razor
                    The user can then select a reservation and view its details
                    along with editing the name, citizenship, and reservation status.
                    Marking a reservation as inactive cancels it and it is not displayed upon search.
                    Once the changes are done the info persists back into the storage file.
                    The output includes a list that updates based on search results and
                    immediate feedback on updated reservations.
*@

@page "/reservations"

<h2>Reservation Finder</h2>
                                    @* Allows input of search criteria for finding reservations *@
<div class="Reservations-finder">

    <div class="input-group">
        <label for="ReservationCodeSearch">Code:</label>
        <input class="input-field" @bind="reservationCodeSearch" />
    </div>

    <div class="input-group">
        <label for="AirlineSearch">Airline:</label>
        <input class="input-field" @bind="airlineSearch" />
    </div>

    <div class="input-group">
        <label for="NameSearch">Name:</label>
        <input class="input-field" @bind="nameSearch" />
    </div>

    <button class="btn" @onclick="SearchReservations">Find Reservations</button>
</div>
                                   @* Displays the selectable search results *@
<div class="flex-container">
    <h2>Reservations</h2>
    @if (searchPerformed)
    {
        <!-- displays a list or a message based on search results -->
        @if (foundReservations.Any())
        {
            <table class="table">
                <tbody>
                    @foreach (var reservation in foundReservations)
                    {
                        <tr>
                            <td>@reservation.ToString()</td>

                            <!-- button that populates the field based on flight picked -->
                            <td>
                                <button class="save" @onclick="() => SelectReservation(reservation)">Select</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <textarea class="input-field" readonly rows=1>No reservations found.</textarea>
        }
    } else
    {
        <textarea class="input-field" @bind="reservationsText" readonly rows=1></textarea>
    }
</div>

                               @*Allows editing and updating of a selected reservation *@
<div class="flex-container">
    <h2>Reserve</h2>

    <div class="input-group">
        <label for="ReservationCodeUpdate">Reservation Code:</label>
        <input class="input-field" @bind="reservationCodeUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="FlightCodeUpdate">Flight Code:</label>
        <input class="input-field" @bind="flightCodeUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="AirlineUpdate">Airline:</label>
        <input class="input-field" @bind="airlineUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="CostUpdate">Cost:</label>
        <input class="input-field" @bind="costUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="NameUpdate">Name:</label>
        <input class="input-field" @bind="nameUpdate" />
    </div>

    <div class="input-group">
        <label for="CitizenshipUpdate">Citizenship:</label>
        <input class="input-field" @bind="citizenshipUpdate" />
    </div>

    <div class="input-group">
        <label for="StatusUpdate">Status:</label>
        <select class="input-field" @bind="statusUpdate">
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </select>
    </div>

    <button class="save" @onclick="UpdateReservation">Save</button>

</div>

<!--Styling for the reservation page below-->
<style>
* {
    box-sizing: border-box;
}

h2 {
    text-align: center;
}


.Reservations-finder {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
        width: 100%;
}


.flex-container {
    display: flex;
    flex-direction: column; 
    align-items: stretch; 
    gap: 20px;
}

.input-group {
    display: flex;
    flex-direction: column;
}

.input-field {
    width: 100%; 
    padding: 8px;
    border: 1px solid #CCCCCC;
    border-radius: 5px;
}

.btn {
    padding: 8px;
    background-color: #007BFF;
    color: white;
    border: none;
    cursor: pointer;
    width: 100%; 
}

.btn:hover {
    background-color: #0056b3;
}

.reservation-finder,
.reservation-form {
    padding: 20px;
    background-color: white;
}

.save-button-container {
    display: flex;
    justify-content: center; 
    align-items: center; 
}

.save {
    padding: 10px 20px;
    background-color: #007BFF;
    color: white;
    border: none;
    cursor: pointer;
    width: 200px;
    margin: 0 auto; 
    border-radius: 5px;
}

.save:hover {
    background-color: #0056b3;
}

</style>


@code {
    //Manages reservation data
    private ReservationManager reservationManager = new ReservationManager();
    //Stores the list of found reservations
    private List<Reservation> foundReservations = new List<Reservation>();
    //Holds the currently selected reservation for editing
    private Reservation selectedReservation;

    //Input fields for the search criteria
    private string reservationCodeSearch;
    private string airlineSearch;
    private string nameSearch;
    private bool searchPerformed = false;

    //Fields for updating the displayed reservation details
    private string reservationCodeUpdate;
    private string flightCodeUpdate;
    private string airlineUpdate;
    private string costUpdate;
    private string nameUpdate;
    private string citizenshipUpdate;
    private string statusUpdate;

    //Placeholder text for the reservation
    private string reservationsText = "Please perform a search to see reservations.";

    private async Task SearchReservations()                 @*Searches for reservations based on the input criteria*@
    {
        // Calls the manager to find reservations and updates the list
        foundReservations = reservationManager.FindReservations(reservationCodeSearch, airlineSearch, nameSearch);
        reservationsText = string.Join(Environment.NewLine, foundReservations.Select(r => r.ToString()));

        searchPerformed = true;
    }
                                                       
    private void SelectReservation(Reservation reservation)  @*Selects a reservation for editing and binds its details*@
    {
        selectedReservation = reservation;

        // Readonly field
        reservationCodeUpdate = reservation.ReservationCode;
        flightCodeUpdate = reservation.FlightCode;
        airlineUpdate = reservation.Airline;
        costUpdate = reservation.Cost.ToString(); 

        // Editable field
        nameUpdate = reservation.Name;
        citizenshipUpdate = reservation.Citizenship;
        statusUpdate = reservation.Status;
    }

    private void UpdateReservation()                        @*Updates the selected reservation with the new details*@
    {
        if (selectedReservation != null)
        {
            selectedReservation.Name = nameUpdate;
            selectedReservation.Citizenship = citizenshipUpdate;
            selectedReservation.Status = statusUpdate;

            // Persists the changes to the reservation manager and refreshes the list
            reservationManager.UpdateReservation(selectedReservation);
            reservationManager.Persist();
            SearchReservations();
        }
    }

}