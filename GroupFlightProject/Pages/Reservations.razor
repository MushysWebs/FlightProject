@page "/reservations"



<h2>Reservation Finder</h2>

<div class="Reservations-finder">

    <div class="input-group">
        <label for="ReservationCodeSearch">Code:</label>
        <input class="input-field" @bind="reservationCodeSearch" />
    </div>

    <div class="input-group">
        <label for="AirlineSearch">Airline:</label>
        <input class="input-field" @bind="airlineSearch" />
    </div>

    <div class="input-group">
        <label for="NameSearch">Name:</label>
        <input class="input-field" @bind="nameSearch" />
    </div>

    <button class="btn" @onclick="SearchReservations">Find Reservations</button>

</div>

<div class="flex-container">
    <h2>Reservations</h2>
    @if (searchPerformed)
    {
        @if (foundReservations.Any())
        {
            <table class="table">
                <tbody>
                    @foreach (var reservation in foundReservations)
                    {
                        <tr>
                            <td>@reservation.ToString()</td>
                            <td>
                                <button class="save" @onclick="() => SelectReservation(reservation)">Select</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <textarea class="input-field" readonly rows=1>No reservations found.</textarea>
        }
    } else
    {
        <textarea class="input-field" @bind="reservationsText" readonly rows=1></textarea>
    }
</div>

<div class="flex-container">
    <h2>Reserve</h2>

    <div class="input-group">
        <label for="ReservationCodeUpdate">Reservation Code:</label>
        <input class="input-field" @bind="reservationCodeUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="FlightCodeUpdate">Flight Code:</label>
        <input class="input-field" @bind="flightCodeUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="AirlineUpdate">Airline:</label>
        <input class="input-field" @bind="airlineUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="CostUpdate">Cost:</label>
        <input class="input-field" @bind="costUpdate" readonly />
    </div>

    <div class="input-group">
        <label for="NameUpdate">Name:</label>
        <input class="input-field" @bind="nameUpdate" />
    </div>

    <div class="input-group">
        <label for="CitizenshipUpdate">Citizenship:</label>
        <input class="input-field" @bind="citizenshipUpdate" />
    </div>

    <div class="input-group">
        <label for="StatusUpdate">Status:</label>
        <select class="input-field" @bind="statusUpdate">
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </select>
    </div>

    <button class="save" @onclick="UpdateReservation">Save</button>

</div>




<style>
* {
    box-sizing: border-box;
}

h2 {
    text-align: center;
}


.Reservations-finder {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
        width: 100%;
}


.flex-container {
    display: flex;
    flex-direction: column; 
    align-items: stretch; 
    gap: 20px;
}

.input-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 10px;
}

.input-field {
    width: 100%; 
    padding: 8px;
    border: 1px solid #CCCCCC;
    border-radius: 5px;
}

.btn {
    padding: 8px;
    background-color: #007BFF;
    color: white;
    border: none;
    cursor: pointer;
    width: 100%; 
}

.btn:hover {
    background-color: #0056b3;
}

.reservation-finder,
.reservation-form {
    padding: 20px;
    background-color: white;
}

.save-button-container {
    display: flex;
    justify-content: center; 
    align-items: center; 
}

    .save {
        padding: 10px 20px;
        background-color: #007BFF;
        color: white;
        border: none;
        cursor: pointer;
        width: 200px;
        margin: 0 auto; 
        border-radius: 5px;
    }

    .save:hover {
        background-color: #0056b3;
    }

</style>


@code {
    private ReservationManager reservationManager = new ReservationManager();
    private List<Reservation> foundReservations = new List<Reservation>();
    private Reservation selectedReservation;
    private string reservationCodeSearch;
    private string airlineSearch;
    private string nameSearch;
    private string statusUpdate;
    private bool searchPerformed = false;

    private string reservationCodeUpdate;
    private string flightCodeUpdate;
    private string airlineUpdate;
    private string costUpdate;
    private string nameUpdate;
    private string citizenshipUpdate;
    private string reservationsText = "Please perform a search to see reservations.";

    private async Task SearchReservations()
    {
        foundReservations = reservationManager.FindReservations(reservationCodeSearch, airlineSearch, nameSearch);
        reservationsText = string.Join(Environment.NewLine, foundReservations.Select(r => r.ToString()));

        searchPerformed = true;
    }

    private void SelectReservation(Reservation reservation)
    {
        selectedReservation = reservation;

        // Readonly field
        reservationCodeUpdate = reservation.ReservationCode;
        flightCodeUpdate = reservation.FlightCode;
        airlineUpdate = reservation.Airline;
        costUpdate = reservation.Cost.ToString(); 

        // Editable field
        nameUpdate = reservation.Name;
        citizenshipUpdate = reservation.Citizenship;
        statusUpdate = reservation.Status;
    }

    private void UpdateReservation()
    {
        if (selectedReservation != null)
        {
            selectedReservation.Name = nameUpdate;
            selectedReservation.Citizenship = citizenshipUpdate;
            selectedReservation.Status = statusUpdate;

            reservationManager.UpdateReservation(selectedReservation);
            reservationManager.Persist();

            //refresh list
            SearchReservations();
        }
    }

}